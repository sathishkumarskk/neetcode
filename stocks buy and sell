PYTHON:
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        l=prices
        li=[]
        for i in range(0,len(l)):
            for j in range(0,len(l)):
                if i!=j:
                    if i<j and l[i]<l[j]:
                        p=abs(l[i]-l[j])
                        li.append(p)
        if len(li)==0:
            return(0)
        else:    
            return(max(li))  

JAVA:
 import java.util.*;
public class stack{
    public static void main(String[] argv){
      int[] l={10,8,7,5,2};
      ArrayList<Integer> li = new ArrayList<>();
      for (int i=0;i<l.length;i++){
          for (int j=0;j<l.length;j++){
              if (i!=j){
                  if (i<j && l[i]<l[j]){
                     int p=Math.abs(l[i]-l[j]); 
                     li.add(p);
                  }
              }
          }
      }if (li.size()!=0){
        int max=Collections.max(li);
        System.out.println("maximum :"+max);
      }
        else{
            System.out.println(0);
        }

}
}
